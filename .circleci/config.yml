version: 2.1

jobs:
  build:
    docker:
      - image: eiln/per-firmware
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Check Code Formatting (clang-format)"
          command: ./format.sh check
      - run:
          name: "Generate & Build"
          command: |
            cmake -S . -B ./build -G Ninja -DCMAKE_BUILD_TYPE=Debug
            ninja -C ./build all
            cmake -S . -B ./build -G Ninja -DBOOTLOADER_BUILD=ON -DCMAKE_BUILD_TYPE=Debug
            ninja -C ./build all
      - run:
          name: "Prepare Artifacts"
          command: |
            ARTIFACT_NAME=PER_FW_${CIRCLE_SHA1:0:10}
            mkdir $ARTIFACT_NAME
            cp "./output"/*/*.elf $ARTIFACT_NAME
            cp "./output"/*/*.hex $ARTIFACT_NAME
            cp "./output"/*/BL_*.elf $ARTIFACT_NAME
            cp "./output"/*/BL_*.hex $ARTIFACT_NAME
            cp "./output"/*/*/BL_*.elf $ARTIFACT_NAME
            cp "./output"/*/*/BL_*.hex $ARTIFACT_NAME
            cp ./common/daq/per_dbc_VCAN.dbc $ARTIFACT_NAME
            mkdir artifacts
            tar -czf ./artifacts/${ARTIFACT_NAME}.tar.gz $ARTIFACT_NAME
      - store_artifacts:
          path: artifacts

workflows:
  build-workflow:
    jobs:
      - build
