# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: irvingywang/firmware-build:latest
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Update git submodules"
          command: "git submodule update --init --recursive"
      - run:
          name: "Generate & Build"
          command: |
            cmake -S . -B ./build -G Ninja -DCMAKE_BUILD_TYPE=Debug
            ninja -C ./build all
            cmake -S . -B ./build -G Ninja -DBOOTLOADER_BUILD=ON -DCMAKE_BUILD_TYPE=Debug
            ninja -C ./build all
      - run:
          name: "Prepare Artifacts"
          command: |
            ARTIFACT_NAME=PER_FW_${CIRCLE_SHA1:0:10}
            mkdir $ARTIFACT_NAME
            cp "./output"/*/*.elf $ARTIFACT_NAME
            cp "./output"/*/*.hex $ARTIFACT_NAME
            cp "./output"/*/BL_*.elf $ARTIFACT_NAME
            cp "./output"/*/BL_*.hex $ARTIFACT_NAME
            cp "./output"/*/*/BL_*.elf $ARTIFACT_NAME
            cp "./output"/*/*/BL_*.hex $ARTIFACT_NAME
            cp ./common/daq/per_dbc_VCAN.dbc $ARTIFACT_NAME
            mkdir artifacts
            tar -czf ./artifacts/${ARTIFACT_NAME}.tar.gz $ARTIFACT_NAME

      - store_artifacts:
          path: artifacts

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build
