{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required":["busses"],
    "properties": {
        "busses":{
            "type":"array",
            "items":{"$ref":"#/$defs/bus"}
        }
    },
    "$defs":{
        "bus":{
            "type":"object",
            "required":["bus_name", "nodes"],
            "properties":{
                "bus_name":{
                    "type":"string",
                    "description":"The name of the bus"
                },
                "nodes":{
                    "type":"array",
                    "description":"The nodes (MCUs) on the bus",
                    "items":{"$ref":"#/$defs/node"}
                }
            }
        },
        "node":{
            "type":"object",
            "required":["node_name", "node_ssa","tx", "rx"],
            "properties":{
                "node_name":{
                    "type":"string",
                    "description":"name of the node (MCU)"
                },
                "can_peripheral":{
                    "type":"string",
                    "enum": ["CAN1", "CAN2"]
                },
                "node_ssa":{
                    "type":"integer",
                    "description":"subsystem address, lower = higher priority, 0-63",
                    "minimum": 0,
                    "maximum": 63
                },
                "tx":{
                    "type":"array",
                    "description":"messages transmitted by the node",
                    "items":{"$ref":"#/$defs/tx_message"}
                },
                "rx":{
                    "type":"array",
                    "description":"messages received by the node",
                    "items":{"$ref":"#/$defs/rx_message"}
                },
                "accept_all_messages":{
                    "type":"boolean",
                    "description":"Do not generate CAN RX filters and accept all messages. Only those messages configured in the RX field will be populated in the can_data structure."
                }

            }
        },
        "tx_message":{
            "type":"object",
            "required":["msg_name", "msg_desc", "signals", "msg_period"],
            "properties":{
                "msg_name":{"type":"string"},
                "msg_desc":{"type":"string"},
                "signals":{
                    "type":"array",
                    "description":"variables within message",
                    "items":{"$ref":"#/$defs/signal"}
                },
                "msg_period":{
                    "type":"integer",
                    "description":"ms, leave 0 to disable stale checking"
                },
                "msg_hlp":{
                    "type":"integer",
                    "description":"message high level priority value 0-5, 0 being highest\n0 - System Critical Faults\n1 - System Critical Data\n2 - Non-critical Faults\n3 - High Priority Data\n4 - Low Priority Data\n5 - Data Acquisition Data",
                    "minimum":0,
                    "maximum":5
                },
                "msg_pgn":{
                    "type":"integer",
                    "description":"parameter group number 0-1,048,575\nDescribes the data the message contains, not an indication of where data is coming and going.",
                    "minimum":0,
                    "maximum":1048575
                },
                "msg_id_override":{
                    "type":"string",
                    "description":"sets the message to a specific id, ignoring the node's ssa\nTo use hex do \"0x########\""
                },
                "is_standard_id": {
                    "type": "boolean",
                    "description": "Enables generation of standard-id specific code for both transmission and reception of message. All messages will default to extended-id without this parameter provided"
                }
            }
        },
        "signal":{
            "type":"object",
            "required":["sig_name","type"],
            "properties":{
                "sig_name":{"type":"string"},
                "sig_desc":{"type":"string"},
                "type":{
                    "type":"string",
                    "enum":["uint8_t", "uint16_t", "uint32_t", "uint64_t",
                            "int8_t", "int16_t", "int32_t", "int64_t",
                            "float"],
                    "description":"can only change length of uints, float defaults to 32 bits"
                },
                "length":{
                    "type":"integer",
                    "description":"length in bits, only valid if unsigned data type",
                    "minimum":1,
                    "maimum":64
                },
                "scale":{"type":"number", "description":"scale factor to apply, default of 1\nDecoding results in (x * scale)+offset"},
                "offset":{"type":"number", "description": "offset to apply, default of 0\nDecoding results in (x * scale)+offset"},
                "maximum":{"type":"number", "description": "maximum value of signal, defaults to none"},
                "minimum":{"type":"number", "description": "minimum value of signal, defaults to none"},
                "unit":{"type":"string", "description":"unit of the signal, defaults to none"},
                "choices":{"type":"array", "description":"enumeration values", "items":{"type":"string"}}
            }
        },
        "rx_message":{
            "type":"object",
            "required":["msg_name"],
            "properties":{
                "msg_name":{"type":"string"},
                "callback":{"type":"boolean"},
                "irq":{"type":"boolean"},
                "arg_type":{"type":"string", "enum":["msg_data", "header"]}
            }
        }
    }

}
