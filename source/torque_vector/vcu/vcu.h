#include "gps.h"

typedef struct {
  float r;
  float ht[2];
  float gr;
  float Ns;
  float ET_permit_N;
  float PT_permit_N;
  float VS_permit_N;
  float VT_permit_N;
  float CS_SFLAG_True;
  float TB_SFLAG_True;
  float SS_SFLAG_True;
  float WT_SFLAG_True;
  float IV_SFLAG_True;
  float BT_SFLAG_True;
  float IAC_SFLAG_True;
  float IAT_SFLAG_True;
  float IBC_SFLAG_True;
  float IBT_SFLAG_True;
  float SS_FFLAG_True;
  float AV_FFLAG_True;
  float GS_FFLAG_True;
  float VCU_PFLAG_VS;
  float VCU_PFLAG_VT;
  float TH_lb;
  float ST_lb;
  float VB_lb;
  float WT_lb[2];
  float WM_lb[2];
  float GS_lb;
  float AV_lb[3];
  float IB_lb;
  float MT_lb;
  float CT_lb;
  float IT_lb;
  float MC_lb;
  float IC_lb;
  float BT_lb;
  float AG_lb[3];
  float TO_lb[2];
  float DB_lb;
  float PI_lb;
  float PP_lb;
  float TH_ub;
  float ST_ub;
  float VB_ub;
  float WT_ub[2];
  float WM_ub[2];
  float GS_ub;
  float AV_ub[3];
  float IB_ub;
  float MT_ub;
  float CT_ub;
  float IT_ub;
  float MC_ub;
  float IC_ub;
  float BT_ub;
  float AG_ub[3];
  float TO_ub[2];
  float DB_ub;
  float PI_ub;
  float PP_ub;
  float CF_IB_filter_N;
  float R[9];
  float Batt_Voc_brk[506];
  float Batt_As_Discharged_tbl[506];
  float zero_currents_to_update_SOC;
  float Batt_cell_zero_SOC_voltage;
  float Batt_cell_zero_SOC_capacity;
  float Batt_cell_full_SOC_voltage;
  float Batt_cell_full_SOC_capacity;
  float MAX_TORQUE_NOM;
  float PT_WM_brkpt[150];
  float PT_VB_brkpt[50];
  float PT_TO_table[7500];
  float PT_WM_lb;
  float PT_WM_ub;
  float PT_VB_lb;
  float PT_VB_ub;
  float mT_derating_full_T;
  float mT_derating_zero_T;
  float cT_derating_full_T;
  float cT_derating_zero_T;
  float bT_derating_full_T;
  float bT_derating_zero_T;
  float bI_derating_full_T;
  float bI_derating_zero_T;
  float Vb_derating_full_T;
  float Vb_derating_zero_T;
  float Ci_derating_full_T;
  float Ci_derating_zero_T;
  float Cm_derating_full_T;
  float Cm_derating_zero_T;
  float iT_derating_full_T;
  float iT_derating_zero_T;
  float dST_DB;
  float r_power_sat;
  float TV_GS_brkpt[51];
  float TV_ST_brkpt[53];
  float TV_AV_table[2703];
  float TV_ST_lb;
  float TV_ST_ub;
  float TV_GS_lb;
  float TV_GS_ub;
  float TC_eps;
  float TC_sl_threshold;
  float TC_throttle_mult;
  float TC_highs_to_engage;
  float TC_lows_to_disengage;
  float REF_shaft_speed;
  float REF_slip_ratio;
} pVCU_struct;

typedef struct {
  float CS_SFLAG;
  float TB_SFLAG;
  float SS_SFLAG;
  float WT_SFLAG;
  float IV_SFLAG;
  float BT_SFLAG;
  float IAC_SFLAG;
  float IAT_SFLAG;
  float IBC_SFLAG;
  float IBT_SFLAG;
  float SS_FFLAG;
  float AV_FFLAG;
  float GS_FFLAG;
  float VCU_PFLAG;
} fVCU_struct;

typedef struct {
  float TH_RAW;
  float ST_RAW;
  float VB_RAW;
  float WT_RAW[2];
  float WM_RAW[2];
  float GS_RAW;
  float AV_RAW[3];
  float IB_RAW;
  float MT_RAW;
  float CT_RAW;
  float IT_RAW;
  float MC_RAW;
  float IC_RAW;
  float BT_RAW;
  float AG_RAW[3];
  float TO_RAW[2];
  float DB_RAW;
  float PI_RAW;
  float PP_RAW;
} xVCU_struct;

typedef struct {
  float ET_permit_buffer[5];
  float PT_permit_buffer[5];
  float VS_permit_buffer[5];
  float VT_permit_buffer[5];
  float VCU_mode;
  float IB_CF_buffer[10];
  float TH_CF;
  float ST_CF;
  float VB_CF;
  float WT_CF[2];
  float WM_CF[2];
  float GS_CF;
  float AV_CF[3];
  float IB_CF;
  float MT_CF;
  float CT_CF;
  float IT_CF;
  float MC_CF;
  float IC_CF;
  float BT_CF;
  float AG_CF[3];
  float TO_CF[2];
  float DB_CF;
  float PI_CF;
  float PP_CF;
  float zero_current_counter;
  float Batt_SOC;
  float Batt_Voc;
  float TO_ET[2];
  float TO_AB_MX;
  float TO_DR_MX;
  float TO_PT[2];
  float WM_VS[2];
  float VT_mode;
  float TO_VT[2];
  float TV_AV_ref;
  float TV_delta_torque;
  float TC_highs;
  float TC_lows;
  float sl;
} yVCU_struct;

fVCU_struct init_fVCU(void);
xVCU_struct init_xVCU(void);
yVCU_struct init_yVCU(void);
pVCU_struct init_pVCU(void);

void vcu_pp(xVCU_struct* xVCU, fVCU_struct* fVCU, GPS_Handle_t* GPS);

void vcu_step(const pVCU_struct *p, const fVCU_struct *f, const xVCU_struct *x, yVCU_struct *y);